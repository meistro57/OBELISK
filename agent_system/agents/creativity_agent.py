import os
import anthropic


class CreativityAgent:
    """
    Uses Anthropic API to review and refine ideas generated by IdeasAgent.
    """
    def __init__(self, api_key: str = None, model: str = "claude-v1"):
        self.api_key = api_key or os.getenv("ANTHROPIC_API_KEY")
        if not self.api_key:
            raise ValueError("ANTHROPIC_API_KEY not set")
        self.client = anthropic.Client(api_key=self.api_key)
        self.model = model

    def review_ideas(self, project_name: str, ideas_text: str) -> str:
        """
        Reviews and enhances the brainstormed ideas for the given project.
        """
        prompt = (
            f"You are a creative director. Review and refine the following brainstormed ideas "
            f"for the project '{project_name}'. Provide feedback, enhancements, and novel angles:\n\n"
            f"{ideas_text}\n\n"
            "Return a refined list with annotations."
        )
        try:
            response = self.client.completions.create(
                model=self.model,
                prompt=anthropic.HUMAN_PROMPT + prompt + anthropic.AI_PROMPT,
                max_tokens=500,
                stop_sequences=[anthropic.HUMAN_PROMPT],
            )
        except Exception as e:
            raise RuntimeError(f"Anthropic Creativity API error: {e}") from e

        completion = getattr(response, "completion", None)
        if not completion:
            raise RuntimeError("Empty response from Anthropic Creativity API")
        return completion.strip()
